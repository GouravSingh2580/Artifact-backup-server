pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://172.31.64.203:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "gouravsingh258/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Artifactory Upload') {
        environment {
          ARTIFACTORY_URL = "http://localhost:8082/"
          ARTIFACTORY_TOKEN = "eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiJOcDZlSThiMjRoc3R1TTNnRWxJTGU0OTJ6UjltMFFwangtOHh0dV96NVpBIn0.eyJzdWIiOiJqZmFjQDAxZ3h4NmJmNm1yODNmMGQwcHR2eDEwZDd0XC91c2Vyc1wvamVua2lucy10b2tlbiIsInNjcCI6ImFwcGxpZWQtcGVybWlzc2lvbnNcL2FkbWluIiwiYXVkIjoiKkAqIiwiaXNzIjoiamZmZUAwMWd4eDZiZjZtcjgzZjBkMHB0dngxMGQ3dCIsImlhdCI6MTY4MTM4NjA0OSwianRpIjoiMWQ5OTRjZGQtOGI0OC00MTJiLTlhYWEtZDY5YmNlMGIxNTY2In0.DrJPfKgHZBEBu3nKh3PDGhM_kEvT7Nma2Pq_pQkFFCrWquHVzYOrPjy2mrXV1ctYjWQJFVhU8-v2lZxfrBUOOm9zyTVw7CmOxASRCmwcqxo5e_3FXJJ8j8kvazyxC-wRdIz9T5eIrLlXyGdN0DVBLr2armMudH2W8LZKzy-eeYl7fXbY2Oj-KN_xUYGpaA7EJwVVCBmSEI29vw_6_LL2iJYrlJldpLym1mwHqGjqrZdFNOjrxcA9f3EhnZ5GxlxdXZagfNRQhqoPA2cuMmVBs2stsmpM1gZuUWAcFd0RWS8Ta6XM7Cqi3qozI37GkYTeLBPTxdfQv6wTbqMvBjrMbA"
          ARTIFACTORY_REPO = "example-repo"
        }
        steps {
          script {
            def server = Artifactory.server url: ARTIFACTORY_URL, credentialsId: 'artifactory'
            def uploadSpec = """
              {
                "files": [
                  {
                    "pattern": "${DOCKER_IMAGE}",
                    "target": "${ARTIFACTORY_REPO}/${DOCKER_IMAGE}",
                    "props": "docker.image=${DOCKER_IMAGE}"
                  }
                ]
              }
            """
            server.upload spec: uploadSpec
          }
        }
      }
  }
}
